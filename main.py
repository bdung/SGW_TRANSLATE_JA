# import whisper
# from docx import Document

# # 1Ô∏è‚É£ Load model Whisper
# model = whisper.load_model("large")

# # 2Ô∏è‚É£ Transcribe file audio ti·∫øng Nh·∫≠t
# result = model.transcribe(r"D:\Downloads\Tiengnhathay.com_1500-cau-giao-tiep-tieng-nhat-mp3\file 22.mp3", language="ja")


# # 4Ô∏è‚É£ T·∫°o file Word v√† l∆∞u n·ªôi dung
# doc = Document()
# doc.add_heading("Transcription ti·∫øng Nh·∫≠t", level=1)
# doc.add_paragraph(result["text"])
# doc.save(r"D:\Downloads\Tiengnhathay.com_1500-cau-giao-tiep-tieng-nhat-mp3\file_22_3.docx")

# print("ƒê√£ l∆∞u n·ªôi dung v√†o file Word th√†nh c√¥ng!")
import streamlit as st
import whisper
from docx import Document
import tempfile
import os

# Load model (n√™n ch·ªçn small/medium ƒë·ªÉ deploy online nhanh h∆°n)
@st.cache_resource
def load_model():
    return whisper.load_model("base")

model = load_model()

st.title("üé§ Whisper Transcription App")
st.write("Upload file audio ti·∫øng Nh·∫≠t, app s·∫Ω nh·∫≠n di·ªán v√† xu·∫•t ra file Word.")

# Upload file
uploaded_file = st.file_uploader("Ch·ªçn file mp3 ho·∫∑c wav", type=["mp3", "wav"])

if uploaded_file is not None:
    # L∆∞u file t·∫°m
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmp:
        tmp.write(uploaded_file.read())
        tmp_path = tmp.name
    
    with st.spinner("‚è≥ ƒêang x·ª≠ l√Ω..."):
        # Nh·∫≠n di·ªán gi·ªçng n√≥i
        result = model.transcribe(tmp_path, language="ja")
        text = result["text"]

        # Hi·ªÉn th·ªã text
        st.subheader("üìú K·∫øt qu·∫£:")
        st.write(text)

        # Xu·∫•t file Word
        doc = Document()
        doc.add_heading("Transcription ti·∫øng Nh·∫≠t", level=1)
        doc.add_paragraph(text)
        output_path = "output.docx"
        doc.save(output_path)

    # N√∫t download
    with open(output_path, "rb") as f:
        st.download_button("‚¨áÔ∏è T·∫£i v·ªÅ file Word", f, file_name="transcription.docx")

    # Xo√° file t·∫°m
    os.remove(tmp_path)

